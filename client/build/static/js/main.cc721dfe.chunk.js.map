{"version":3,"sources":["components/IssueTable.js","components/NavBar.js","components/AddIssueTextbox.js","components/AddIssue.js","components/ToastPop.js","App.js","reportWebVitals.js","index.js"],"names":["IssueTable","issueList","setAddIssueOpen","setAddOrUpdate","setEditInitVals","deleteIssue","issueData","map","el","index","_id","title","issue_title","details","issue_text","assigned","assigned_to","status","status_text","key","icon","onClick","editClick","deleteClick","useState","start","end","recordsRange","setRecordsRange","currentPage","setCurrentPage","id","isZebra","hasStickyHead","hasStickyFooter","footer","totalRecords","length","showPageSizeSelection","pageSize","onPagination","next","size","newPage","newPageSize","handlePagination","pageSizeSelectionOptions","name","slice","renderRows","NavBar","addIssueOpen","navigationType","display","flex","margin","menuType","height","AddIssueTextbox","text","fieldKey","required","editInitVals","label","value","onChange","e","target","AddIssue","addIssue","addOrUpdate","errorCount","setErrorCount","open","subtitle","stickyFooter","onSubmit","preventDefault","leftSideButtons","saveButton","buttonType","type","fieldSpacing","ToastPop","toastMessage","toastOpen","setToastOpen","variant","onDismiss","timeout","App","setIssueList","setToastMessage","useEffect","getIssues","console","log","a","fetch","response","json","data","formData","FormData","append","body","URLSearchParams","method","theme","mintTheme","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc721dfe.chunk.js","sourcesContent":["import React from 'react'\r\nimport { useState } from \"react\"\r\nimport { FlatTable,FlatTableRow,FlatTableHead,FlatTableHeader,FlatTableBody,FlatTableCell } from \"carbon-react/lib/components/flat-table\"\r\nimport Pager from \"carbon-react/lib/components/pager\"\r\nimport { ActionPopover, ActionPopoverItem } from \"carbon-react/lib/components/action-popover\"\r\n\r\nconst IssueTable = ({ issueList, setAddIssueOpen, setAddOrUpdate, setEditInitVals, deleteIssue }) => {\r\n// TODO implment sorting? looks like a pain\r\n// TODO implement preview while data is loading?\r\n\r\n  // map through the elements returned by the getIssues method and create a table row for each one\r\n  const issueData = issueList.map((el, index) => {\r\n    // extract vars from array\r\n    const _id = el._id\r\n    const title = el.issue_title\r\n    const details = el.issue_text\r\n    const assigned = el.assigned_to\r\n    const status = el.status_text\r\n\r\n    return (\r\n      <FlatTableRow key={index}>\r\n      <FlatTableCell>{title}</FlatTableCell>\r\n      <FlatTableCell>{details}</FlatTableCell>\r\n      <FlatTableCell>{assigned}</FlatTableCell>\r\n      <FlatTableCell>{status}</FlatTableCell>\r\n      <FlatTableCell>\r\n        <ActionPopover>\r\n        <ActionPopoverItem \r\n          icon=\"edit\" \r\n          onClick={\r\n            () => editClick(_id,title,details,assigned,status)}>\r\n                  Edit\r\n                </ActionPopoverItem>\r\n                <ActionPopoverItem \r\n                  icon=\"delete\" \r\n                  onClick={\r\n                    () => deleteClick(_id)}>\r\n                  Delete\r\n                </ActionPopoverItem>\r\n        </ActionPopover>\r\n      </FlatTableCell>\r\n    </FlatTableRow>\r\n    )\r\n  })\r\n\r\n  const editClick = (_id, title, details, assigned, status) => {\r\n    // set the form type to update\r\n    setAddOrUpdate(\"Update\")\r\n\r\n    // set the init values for use in the add issue form\r\n    setEditInitVals({ _id, title, details, assigned, status })\r\n\r\n    //launch form \r\n    setAddIssueOpen(true)\r\n  }\r\n\r\n  const deleteClick = (_id) => {\r\n    deleteIssue(_id)\r\n  }\r\n\r\n  const [recordsRange, setRecordsRange] = useState({ start: 0, end: 5 })\r\n  const [currentPage, setCurrentPage] = useState(1)\r\n\r\n  const renderRows = () => {\r\n    const { start, end } = recordsRange\r\n    if (start < 0) return issueData\r\n    if (end> issueData.length) return issueData.slice(start, issueData.length)\r\n    return issueData.slice(start, end)\r\n  }\r\n\r\n  const handlePagination = (newPage, newPageSize) => {\r\n    const start = (newPage - 1) * newPageSize\r\n    const end = start + newPageSize\r\n    setRecordsRange({ start, end })\r\n    setCurrentPage(newPage)\r\n  }\r\n\r\n  const pageSizeOptions = [\r\n    { id: \"5\", name: 5 },\r\n    { id: \"10\", name: 10 }\r\n  ]\r\n\r\n\r\n  return (\r\n    <div id=\"issue-list\">\r\n      <FlatTable isZebra hasStickyHead hasStickyFooter footer = {\r\n          <Pager totalRecords={issueData.length} \r\n            showPageSizeSelection \r\n            pageSize={5}\r\n            currentPage={currentPage}\r\n            onPagination={(next, size) => handlePagination(next, size)}\r\n            pageSizeSelectionOptions={pageSizeOptions}\r\n            />\r\n        }\r\n      >\r\n        <FlatTableHead>\r\n          <FlatTableRow>\r\n            <FlatTableHeader>Title</FlatTableHeader>\r\n            <FlatTableHeader>Details</FlatTableHeader>\r\n            <FlatTableHeader>Assigned To</FlatTableHeader>\r\n            <FlatTableHeader>Status Text</FlatTableHeader>\r\n            <FlatTableHeader />\r\n          </FlatTableRow>\r\n        </FlatTableHead>\r\n        <FlatTableBody>\r\n          {renderRows()}\r\n        </FlatTableBody>\r\n      </FlatTable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default IssueTable\r\n","import React from 'react'\r\nimport NavigationBar from \"carbon-react/lib/components/navigation-bar\"\r\nimport Box from \"carbon-react/lib/components/box\"\r\n//import VerticalDivider from \"carbon-react/lib/components/vertical-divider\";\r\n//import Icon from \"carbon-react/lib/components/icon\"\r\nimport {\r\n  Menu,\r\n  MenuItem,\r\n  //SubmenuBlock,\r\n  //MenuDivider,\r\n} from \"carbon-react/lib/components/menu\";\r\n\r\n// top navbar including the Issue Tracker title and the Add issue button\r\nconst NavBar = ({ addIssueOpen, setAddIssueOpen, setAddOrUpdate, setEditInitVals }) => {\r\n  return (\r\n    <NavigationBar id=\"nav-bar\" navigationType=\"dark\" >\r\n      <Box display=\"flex\" flex=\"1\" margin=\"0 auto\">\r\n        <Menu menuType=\"dark\" display=\"flex\" flex=\"1\">\r\n          <Box height=\"\" flex=\"1\">\r\n              Issue Tracker\r\n          </Box>\r\n          <MenuItem icon=\"add\" onClick={() => {\r\n              setAddIssueOpen(!addIssueOpen)\r\n              setEditInitVals({ // reset edit initial values to as not to pull through the values from the last edit\r\n                _id: \"\",\r\n                title: \"\",\r\n                details: \"\",\r\n                assigned: \"\",\r\n                status: \"\"\r\n              })\r\n              setAddOrUpdate(\"Add\")\r\n              }}>\r\n            Add Issue\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    </NavigationBar>\r\n\r\n  )\r\n}\r\n\r\nexport default NavBar\r\n","import React from 'react'\r\nimport Textbox from \"carbon-react/lib/__experimental__/components/textbox\";\r\n\r\nconst AddIssueTextbox = ({ text, fieldKey, required, editInitVals, setEditInitVals }) => {\r\n\r\n  return (\r\n    <Textbox \r\n      size=\"small\" \r\n      required={required}\r\n      label={text}\r\n      value={editInitVals[fieldKey]}\r\n      onChange={(e) => setEditInitVals({...editInitVals, [fieldKey]: e.target.value})}/>\r\n  )\r\n}\r\n\r\nexport default AddIssueTextbox\r\n\r\n//onChange={(e) => setField(e.target.value)}/>","import React from 'react'\r\nimport { useState } from \"react\"\r\n//import Typography from \"carbon-react/lib/components/typography\"\r\nimport Form from \"carbon-react/lib/components/form\"\r\nimport Dialog from \"carbon-react/lib/components/dialog\"\r\n//import Textbox from \"carbon-react/lib/__experimental__/components/textbox\";\r\nimport Button from \"carbon-react/lib/components/button\"\r\nimport AddIssueTextbox from \"./AddIssueTextbox.js\"\r\n\r\n\r\n\r\n// add issue pop up dialog box, also used for update (depending on addOrUpdate)\r\nconst AddIssue = ({ addIssueOpen, setAddIssueOpen, addIssue, addOrUpdate, editInitVals, setEditInitVals }) => {\r\n\r\n  const [errorCount, setErrorCount] = useState(0)\r\n\r\n  const onSubmit = (e) => {\r\n    // prevent page refresh\r\n    e.preventDefault()\r\n\r\n    // reset error count to zero then increment if either of the two require dfields are empty\r\n    setErrorCount(0)\r\n    if(editInitVals.title===\"\" && editInitVals.details===\"\") return setErrorCount(2)\r\n    if(editInitVals.title===\"\" || editInitVals.details===\"\") return setErrorCount(1)\r\n    setErrorCount(0)\r\n    \r\n    // add issue will add or update depending on the addOrUpdate value\r\n      addIssue()\r\n    \r\n    setAddIssueOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Dialog open={addIssueOpen} title={addOrUpdate+\" Issue\"}subtitle=\"Please enter issue details\">\r\n    <Form stickyFooter={true} \r\n      onSubmit={onSubmit}\r\n      leftSideButtons={<Button onClick={() => setAddIssueOpen(!addIssueOpen)}>\r\n                        Cancel\r\n                      </Button>}\r\n       saveButton={<Button buttonType='primary' type=\"submit\">\r\n                    Save\r\n                  </Button>}\r\n      fieldSpacing={2}\r\n      errorCount={errorCount}\r\n    >\r\n      <AddIssueTextbox \r\n        text=\"Issue Title\"\r\n        fieldKey=\"title\"\r\n        required=\"true\"\r\n        editInitVals={editInitVals}\r\n        setEditInitVals={setEditInitVals}\r\n        />\r\n      <AddIssueTextbox \r\n        text=\"Issue Details\"\r\n        fieldKey=\"details\"\r\n        required=\"true\"\r\n        editInitVals={editInitVals}\r\n        setEditInitVals={setEditInitVals} />\r\n      <AddIssueTextbox \r\n        text=\"Assigned To\"\r\n        fieldKey=\"assigned\"\r\n        editInitVals={editInitVals}\r\n        setEditInitVals={setEditInitVals} />\r\n      <AddIssueTextbox \r\n        text=\"Status\"\r\n        fieldKey=\"status\"\r\n        editInitVals={editInitVals}\r\n        setEditInitVals={setEditInitVals} />\r\n    </Form>\r\n  </Dialog>\r\n  )\r\n}\r\n\r\nexport default AddIssue\r\n","import React from 'react'\r\n//import StyledButton from \"carbon-react/lib/components/button\"\r\nimport Toast from \"carbon-react/lib/components/toast\"\r\n//import actionPopoverMenuComponent from 'carbon-react/lib/components/action-popover/action-popover-menu.component'\r\n\r\nconst ToastPop = ({ toastMessage, toastOpen, setToastOpen }) => {\r\n\r\n  const onDismissClick = (e) => {\r\n    setToastOpen(false)\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Toast variant=\"success\" \r\n        open={toastOpen} \r\n        onDismiss={onDismissClick}\r\n        timeout={2000}\r\n      >\r\n        {toastMessage}\r\n      </Toast>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ToastPop\r\n","//import GlobalStyle from 'carbon-react/lib/style/global-style';\nimport \"./App.css\"\nimport React from 'react';\n//import { BrowserRouter as Router, Route } from \"react-router-dom\"\nimport { useEffect, useState } from \"react\"\nimport { ThemeProvider } from \"styled-components\";\nimport mintTheme from \"carbon-react/lib/style/themes/mint\";\nimport AppWrapper from \"carbon-react/lib/components/app-wrapper\";\n\nimport IssueTable from \"./components/IssueTable.js\"\nimport NavBar from \"./components/NavBar.js\"\nimport AddIssue from \"./components/AddIssue.js\";\nimport ToastPop from \"./components/ToastPop.js\"\n\nfunction App() {\n\n  // the list of issues gottne from the database, used in issuetable\n const [issueList, setIssueList] = useState([])\n\n // the flag to determine whether the add issue form is opne, also used for updating\n const [addIssueOpen, setAddIssueOpen] = useState(false)\n\n // the flag to determine whether the \"x was successful\" toast appears\n const [toastOpen, setToastOpen] = useState(false)\n\n // the var that passes the toast messsage from the add/edit/delete processes to the toast\n const [toastMessage, setToastMessage] = useState(\"\")\n\n // the flag that determines whether the \"add update\" screen will open in add or edit mode\n const [addOrUpdate, setAddOrUpdate] = useState(\"add\")\n\n // object to store the initial values for use when the edit option is launched.\n // also stores the id sent to the api\n const [editInitVals, setEditInitVals] = useState({\n   _id: \"\",\n   title: \"\",\n   details: \"\",\n   assigned: \"\",\n   status: \"\"\n })\n\n  useEffect(() => {\n    getIssues()\n    return () => {\n      console.log(\"loaded\")\n    }\n  }, [])\n\n  // method for getting list of issues from API\n  const getIssues = async () => {\n    try {\n      const response = await fetch(\"/api/issues/apitest\")\n      const data = await response.json()\n      \n      setIssueList(data)\n    } catch (error) {\n      console.log(error)\n    }\n  }\n  \n  // method for sending insert to API\n  const addIssue = async () => {\n\n    // build FormData from fields on the add issue dialog\n    let formData = new FormData()\n    formData.append(\"issue_title\",editInitVals.title)\n    formData.append(\"issue_text\",editInitVals.details)\n    formData.append(\"assigned_to\",editInitVals.assigned)\n    formData.append(\"status_text\",editInitVals.status)\n    formData.append(\"created_by\",\"Administrator\")\n    // add id if it's an update\n    addOrUpdate===\"Update\" && formData.append(\"_id\",editInitVals._id)\n\n    //convert to search params for fetch\n    const body = new URLSearchParams(formData)\n\n    // set methdd according to whether it's an add or update\n    const method = addOrUpdate===\"Add\"? \"POST\":\"PUT\"\n\n    const response = await fetch(\"/api/issues/apitest\", {method, body})\n    const data = await response.json()\n    console.log(data)\n\n    // update user via toast\n    if(addOrUpdate===\"Add\") {\n      setToastMessage(\"Issue created successfully\")\n    } else {\n      setToastMessage(\"Issue updated successfully\")      \n    }\n    setToastOpen(true)\n\n    // refresh list\n    getIssues();\n  }\n\n  const deleteIssue = async (_id) => {\n    // build formdata using the id\n    let formData = new FormData()\n    formData.append(\"_id\",_id)\n\n    const body = new URLSearchParams(formData) \n\n    const response = await fetch(\"/api/issues/apitest\", {\n      method:\"DELETE\",\n      body })\n    const data = await response.json()\n    console.log(data)\n\n    // update user via toast\n    setToastMessage(\"Issue deleted successfully\")\n    setToastOpen(true)\n\n    // refresh list\n    getIssues();\n\n  }\n\n  return (\n<ThemeProvider theme={mintTheme}>\n  <AppWrapper>\n    <NavBar \n      addIssueOpen={addIssueOpen} \n      setAddIssueOpen={setAddIssueOpen}\n      setAddOrUpdate={setAddOrUpdate}\n      setEditInitVals={setEditInitVals}/>\n    <IssueTable \n      issueList={issueList}\n      setAddIssueOpen={setAddIssueOpen}\n      setAddOrUpdate={setAddOrUpdate}\n      setEditInitVals={setEditInitVals}\n      deleteIssue={deleteIssue}/>\n    <AddIssue \n      addIssueOpen={addIssueOpen} \n      setAddIssueOpen={setAddIssueOpen}\n      addIssue={addIssue}\n      addOrUpdate={addOrUpdate}\n      editInitVals={editInitVals}\n      setEditInitVals={setEditInitVals}/>\n    <ToastPop \n      toastMessage={toastMessage}\n      toastOpen={toastOpen}\n      setToastOpen={setToastOpen}/>\n  </AppWrapper>\n</ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}